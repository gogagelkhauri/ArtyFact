@model Web.ViewModels.ProcessingViewModel
@{
    ViewData["Title"] = "Payment";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Styles
{
    <style>
        .my-input {
            padding: 10px;
            border: 1px solid #ccc;
        }
    </style>
}
<form method="post" id="payment-form" action="/Order/ProcessingPayment">
    @Html.AntiForgeryToken()
    <div class="form-group">
        <label for="Email">Email</label>
        <input type="email" id="Email" name="stripeEmail" class="form-control">
    </div>
    <div class="form-group">
        <div id="card-element" class="my-input">
            <!-- A Stripe Element will be inserted here. -->
        </div>

        <!-- Used to display Element errors. -->
        <div id="card-errors" role="alert"></div>
    </div>
    <div class="text-right">
        <button class="btn btn-success">pay</button>
    </div>

</form>

@section scripts{
    <script src="https://js.stripe.com/v3/"></script>

    <script>
        /**/
        var stripe = Stripe("@Model.PublicKey");
        /**/
        var elements = stripe.elements();
        // Custom styling can be passed to options when creating an Element.
        var style = {
            base: {
                // Add your base input styles here. For example:
                iconColor: '#666EE8',
                color: '#31325F',
                lineHeight: '40px',
                fontWeight: 300,
                fontFamily: 'Helvetica Neue',
                fontSize: '15px',

                '::placeholder': {
                color: '#CFD7E0',
                },
            },
        };
        // Create an instance of the card Element.
        var card = elements.create('card', { style: style });
        // Add an instance of the card Element into the `card-element` <div>.
        card.mount('#card-element');
        // Create a token or display an error when the form is submitted.
        var form = document.getElementById('payment-form');
        form.addEventListener('submit', function (event) {
            event.preventDefault();
            stripe.createToken(card).then(function (result) {
                if (result.error) {
                    // Inform the customer that there was an error.
                    var errorElement = document.getElementById('card-errors');
                    errorElement.textContent = result.error.message;
                } else {
                    // Send the token to your server.
                    stripeTokenHandler(result.token);
                }
            });
        });
        function stripeTokenHandler(token) {
            // Insert the token ID into the form so it gets submitted to the server
            var form = document.getElementById('payment-form');
            var hiddenInput = document.createElement('input');
            hiddenInput.setAttribute('type', 'hidden');
            hiddenInput.setAttribute('name', 'stripeToken');
            hiddenInput.setAttribute('value', token.id);
            form.appendChild(hiddenInput);
            // Submit the form
            form.submit();
        }
    </script>
}